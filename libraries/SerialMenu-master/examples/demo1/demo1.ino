///////////////////////////////////////////////////////////////////////////////
// Serial port Menus Demo1
//
// Usage:
// - Compile and load this sketch onto your Arduino board.
// - Keep the USB cable connected while the board is running.
// - In the Arduino programming IDE, go in the "Tools" menu and click on the
//   "Serial Monitor" menu entry.
// A window should appear, and in it a menu will be displayed. Try to type
// the first character of one of the menu entries, followed by enter, in the
// window's text input field.
//
// If there is no clearly legible text shown in the window, set the speed to
// 9600 baud, and set the autoscroll checkbox. Reset the board or reload the
// program.
//
// The goal of this example is to show you how you can create a small menu and
// use it to interact with your main code variables and functions.
// The purpose of the menu is to run doMath() to compute a result.
// The result uses 3 parameters. Parameters x and f are set with the menu, and
// parameter y is generated by the main loop().
// Try entering the keys 'x', 'y', 'f', '=' or 'm' to see the menu in action.
///////////////////////////////////////////////////////////////////////////////
#define DEMOCOPYRIGHT "SerialMenu demo1 - Copyright (c) 2019 Dan Truong"

#include <SerialMenu.hpp>
const SerialMenu& menu = SerialMenu::get();

// Declare some global variables
float f = 0;
uint16_t x = 0;
uint16_t y = 0;

// Declare a math function
void doMath(uint16_t a, float b)
{
  float i = random(x);
 
  Serial.print("RESULT = random(x) * f + y = ");
  Serial.print(i);
  Serial.print(" * ");
  Serial.print(f);
  Serial.print(" + ");
  Serial.print(y);
  Serial.print(" = ");
  Serial.println(i*f + y);
}

// Declare the menu and its callback functions
const SerialMenuEntry mainMenu[] = {
  {
    "update [X]",
    false,
    'x',
    [](){ x = menu.getNumber<uint16_t>("Input x = "); }
  },
  {
    "update [F]",
    false,
    'f',
    [](){ f = menu.getNumber<float>("Input f = "); }
  },
  {
    "show [Y]",
    false, 'y',
    [](){ Serial.print("i = "); Serial.println(y); }
  },
  {
    "[=] do math!",
    false,
    '=',
    [](){ doMath(x, f); }
  },
  {
    "show [M]enu",
    false,
    'm',
    [](){ menu.show(); }
  }
};
constexpr uint8_t mainMenuSize = GET_MENU_SIZE(mainMenu);

// Main code
void setup() {
  Serial.begin(9600);
  while (!Serial){};
  Serial.println(DEMOCOPYRIGHT);

  menu.load(mainMenu, mainMenuSize);
  menu.show();
}

void loop() {
  menu.run(100);
  y++;
  delay(100);
}
